/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfacegrafica;
import classededados.Aluno;
import classededados.ColecaoDeObjetos;
import persistencia.AlunoPersistencia;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Iterator;


/**
 *
 * @author Giu
 */
public class JanelaApresentacao extends javax.swing.JFrame {

    /**
     * Creates new form JanelaApresentacao
     */
    public JanelaApresentacao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonListarOsAlunos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDados = new javax.swing.JTable();
        jButtonListarOsAlunosArrayList = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButton_Queue_Fila = new javax.swing.JButton();
        jButton_Stack_Pilha = new javax.swing.JButton();
        jButton_Lista = new javax.swing.JButton();
        jButton_Set = new javax.swing.JButton();
        jButton_Arvore = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonListarOsAlunos.setText("Listar os Alunos - Vetor");
        jButtonListarOsAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarOsAlunosActionPerformed(evt);
            }
        });

        jTableDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Matricula", "Nome"
            }
        ));
        jScrollPane1.setViewportView(jTableDados);

        jButtonListarOsAlunosArrayList.setText("Listar os Alunos - ArrayList");
        jButtonListarOsAlunosArrayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarOsAlunosArrayListActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButton_Queue_Fila.setText("Listar os Alunos - Queue - Fila");
        jButton_Queue_Fila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Queue_FilaActionPerformed(evt);
            }
        });

        jButton_Stack_Pilha.setText("Listar os Alunos - Stack - Pilha");
        jButton_Stack_Pilha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Stack_PilhaActionPerformed(evt);
            }
        });

        jButton_Lista.setText("Listar os Alunos - Lista");
        jButton_Lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ListaActionPerformed(evt);
            }
        });

        jButton_Set.setText("Listar os Alunos - Set");
        jButton_Set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SetActionPerformed(evt);
            }
        });

        jButton_Arvore.setText("Listar os Alunos - Arvore");
        jButton_Arvore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ArvoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_Lista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonLimpar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonListarOsAlunos)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonListarOsAlunosArrayList)
                            .addComponent(jButton_Set))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_Queue_Fila)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_Stack_Pilha))
                            .addComponent(jButton_Arvore))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonListarOsAlunos)
                    .addComponent(jButtonListarOsAlunosArrayList)
                    .addComponent(jButton_Queue_Fila)
                    .addComponent(jButton_Stack_Pilha))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButton_Lista)
                    .addComponent(jButton_Set)
                    .addComponent(jButton_Arvore))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imprimirDadosNaGrid(Iterator conjunto){
        DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
        model.setNumRows(0);
        while(conjunto.hasNext()){
                String[] linha = new String[2];
                Aluno objetoAluno = (Aluno)conjunto.next();
                linha[0]= objetoAluno.getMatricula();
                linha[1]= objetoAluno.getNome();
                model.addRow(linha);
            }
    }
    
    private void jButtonListarOsAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarOsAlunosActionPerformed
        // TODO add your handling code here:
        try{
            //
            AlunoPersistencia dados = new AlunoPersistencia("./src/dados/ArquivoAlunos_28_33_120_csv.csv");
            //Aluno[] valores = dados.listagemDeAlunosVetor();
            //ColecaoDeObjetos valores = dados.listagemDeAlunosVetor();
            //DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
            //model.setNumRows(0);
            
//            for(int pos=0; pos < valores.length; pos++){
//                String[] linha = new String[2];
//                linha[0]= valores[pos].getMatricula();
//                linha[1]= valores[pos].getNome();
//                model.addRow(linha);
//            }
            imprimirDadosNaGrid(dados.listagemDeAlunosVetor());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButtonListarOsAlunosActionPerformed

    private void jButtonListarOsAlunosArrayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarOsAlunosArrayListActionPerformed
        // TODO add your handling code here:
        try{
            AlunoPersistencia dados = new AlunoPersistencia("./src/dados/ArquivoAlunos_28_33_120_csv.csv");
            //ArrayList<Aluno> valores = dados.listagemDeAlunosArrayList();
           
//            DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
//            model.setNumRows(0);
//            
//            for(int pos=0; pos < valores.size(); pos++){
//                String[] linha = new String[2];
//                linha[0]= valores.get(pos).getMatricula();
//                linha[1]= valores.get(pos).getNome();
//                model.addRow(linha);
//            }
            imprimirDadosNaGrid(dados.listagemDeAlunosArrayList());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
        
    }//GEN-LAST:event_jButtonListarOsAlunosArrayListActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
        model.setNumRows(0);
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButton_Queue_FilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Queue_FilaActionPerformed
        // TODO add your handling code here:
        try{
            AlunoPersistencia dados = new AlunoPersistencia("./src/dados/ArquivoAlunos_28_33_120_csv.csv");
            //ArrayList<Aluno> valores = dados.listagemDeAlunosArrayList();
           
//            DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
//            model.setNumRows(0);
//            
//            for(int pos=0; pos < valores.size(); pos++){
//                String[] linha = new String[2];
//                linha[0]= valores.get(pos).getMatricula();
//                linha[1]= valores.get(pos).getNome();
//                model.addRow(linha);
//            }
            imprimirDadosNaGrid(dados.listagemDeAlunosQueue());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButton_Queue_FilaActionPerformed

    private void jButton_Stack_PilhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Stack_PilhaActionPerformed
        // TODO add your handling code here:
        try{
            AlunoPersistencia dados = new AlunoPersistencia("./src/dados/ArquivoAlunos_28_33_120_csv.csv");
            //ArrayList<Aluno> valores = dados.listagemDeAlunosArrayList();
           
//            DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
//            model.setNumRows(0);
//            
//            for(int pos=0; pos < valores.size(); pos++){
//                String[] linha = new String[2];
//                linha[0]= valores.get(pos).getMatricula();
//                linha[1]= valores.get(pos).getNome();
//                model.addRow(linha);
//            }
            imprimirDadosNaGrid(dados.listagemDeAlunosStack());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButton_Stack_PilhaActionPerformed

    private void jButton_ListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ListaActionPerformed
        // TODO add your handling code here:
        try{
            AlunoPersistencia dados = new AlunoPersistencia("./src/dados/ArquivoAlunos_28_33_120_csv.csv");
            //ArrayList<Aluno> valores = dados.listagemDeAlunosArrayList();
           
//            DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
//            model.setNumRows(0);
//            
//            for(int pos=0; pos < valores.size(); pos++){
//                String[] linha = new String[2];
//                linha[0]= valores.get(pos).getMatricula();
//                linha[1]= valores.get(pos).getNome();
//                model.addRow(linha);
//            }
            imprimirDadosNaGrid(dados.listagemDeAlunosList());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButton_ListaActionPerformed

    private void jButton_SetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SetActionPerformed
        // TODO add your handling code here:
        try{
            AlunoPersistencia dados = new AlunoPersistencia("./src/dados/ArquivoAlunos_28_33_120_csv.csv");
            //ArrayList<Aluno> valores = dados.listagemDeAlunosArrayList();
           
//            DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
//            model.setNumRows(0);
//            
//            for(int pos=0; pos < valores.size(); pos++){
//                String[] linha = new String[2];
//                linha[0]= valores.get(pos).getMatricula();
//                linha[1]= valores.get(pos).getNome();
//                model.addRow(linha);
//            }
            imprimirDadosNaGrid(dados.listagemDeAlunosSet());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButton_SetActionPerformed

    private void jButton_ArvoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ArvoreActionPerformed
        // TODO add your handling code here:
        try{
            AlunoPersistencia dados = new AlunoPersistencia("./src/dados/ArquivoAlunos_28_33_120_csv.csv");
            //ArrayList<Aluno> valores = dados.listagemDeAlunosArrayList();
           
//            DefaultTableModel model =  (DefaultTableModel) jTableDados.getModel();
//            model.setNumRows(0);
//            
//            for(int pos=0; pos < valores.size(); pos++){
//                String[] linha = new String[2];
//                linha[0]= valores.get(pos).getMatricula();
//                linha[1]= valores.get(pos).getNome();
//                model.addRow(linha);
//            }
            imprimirDadosNaGrid(dados.listagemDeAlunosTree());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }//GEN-LAST:event_jButton_ArvoreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaApresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaApresentacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonListarOsAlunos;
    private javax.swing.JButton jButtonListarOsAlunosArrayList;
    private javax.swing.JButton jButton_Arvore;
    private javax.swing.JButton jButton_Lista;
    private javax.swing.JButton jButton_Queue_Fila;
    private javax.swing.JButton jButton_Set;
    private javax.swing.JButton jButton_Stack_Pilha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDados;
    // End of variables declaration//GEN-END:variables
}
